from Mesh import Mesh
import numpy as np
import matplotlib.pyplot as plt

# Define vertices for a highly irregular octahedron
vertices = [
    [1, 0, 0],      # 0
    [-1, 0.5, 0.3], # 1
    [0, 1.5, -0.5], # 2
    [0.2, -1.2, 0.4], # 3
    [0.5, 0.3, 1.8],  # 4
    [-0.3, 0.1, -1.6] # 5
]

# Define faces for the octahedron
faces = [
    [0, 2, 4], [0, 4, 3], [0, 3, 5], [0, 5, 2],
    [1, 2, 4], [1, 4, 3], [1, 3, 5], [1, 5, 2]
]

# Create the mesh
# mesh = Mesh(vertices=vertices, faces=faces)
mesh = Mesh()
mesh.read_off(r"C:\Users\user\OneDrive\Merav\Technion\DGP\data\phands.off")


# Print and visualize original state
print(f"Total squared original angle deficit: {mesh.calculate_total_squared_angle_deficit():.6f}")
mesh.visualize()
# Apply the edge normalizing flow
mesh.edge_normal_alignment_flow(n_iterations=100, step_size=0.1)

# Print and visualize transformed state
print(f"Total squared final angle deficit: {mesh.calculate_total_squared_angle_deficit():.6f}")
mesh.visualize()
